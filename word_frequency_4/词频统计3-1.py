import xlwt
import os
# 加载txt列表寻找关键词并保存到excel


def matchKeyWords(ThePath, keyWords,aim_path):
    dir_list = os.listdir(ThePath)
    book = xlwt.Workbook(encoding='utf-8', style_compression=0)
    sheet = book.add_sheet('年报关键词词频统计', cell_overwrite_ok=True)
    sheet.write(0, 0, '股票代码')
    sheet.write(0, 1, '股票名称')
    sheet.write(0, 2, '年份')
    for i,c_word in enumerate(keyWords):
        sheet.write(0, i+3, c_word)
    index=0
    for dir in dir_list:
        dir_path = ThePath + '\\' + dir
        files = os.listdir(dir_path)
        for file in files:
            if os.path.splitext(file)[-1] == ".txt":
                txt_path = os.path.join(dir_path, file)
                stock_code = dir.split("-")[0]
                stock_name = dir.split("-")[1]
                year = file[0:4]
                sheet.write(index + 1, 0, stock_code)
                sheet.write(index + 1, 1, stock_name)
                sheet.write(index + 1, 2, year)
                print(f'正在统计{dir}-{file}')
                with open(txt_path, "r", encoding='utf-8', errors='ignore')as fp:
                    text = fp.readlines()
                    for ind,word in enumerate(keyWords):
                        num = 0
                        for line in text:
                            num += line.count(word)
                        word_freq=num
                        sheet.write( index + 1, ind + 3,str(word_freq))
                index+=1
    book.save(aim_path)

    #list

ThePath= r'D:\first_01\词频统计\年报txt版本'
aim_path=r'D:\first_01\词频统计\三级指标'
E_Keys = [['低碳','减碳','降碳','零碳','0碳','碳中和','碳足迹','绿色发展','循环经济','节能减排','气候变化','减排目标','减碳目标','绝对目标','强度目标'],
          ['绿色办公','绿色出行','环保水具','绿色生产','清洁生产','绿色包装','产品碳检测','生命周期碳足迹','环境战略','员工培训次数','产污','产污环节'],
          ['突发环境事件','应急预案','环境因素识别与控制程序','环境风险和机遇控制程序','风险和机遇','环境监测管理程序'],
          ['总能源消耗','能源消耗降低','净购入使用的电力及热力','使用的电力','使用的电力及热力','使用的电力','使用的热力'],
['用水总量','新鲜水用量','废水回收','废水利用','污水排放','污水处理','污水处理设施','化学需氧量','废水中的污染物','主要污染物'],
['废气量','锅炉废气','工艺废气','工艺废气处理','锅炉废气处理设施','废气处理设施','污水处理设施','废气中颗粒物'],
['废弃物总量','固体废物','固体废弃物','固体废物综合利用','危险废物运输','危险废物','危险废物处置'],
          ['公示信息','公示信息数'],
          ['通过清洁生产审核','限停产豁免','政府监控','政府监控级别','政府绩效分级','一般排污单位'],
['事故','自动监测'],
       ]

S_Keys = [['ESG','社会责任报告','单独社会领域','CSR','社会领域报告'],
          ['女性员工比例','员工数目','男性员工数目','本地员工','女性员工数目','残疾员工','员工年龄分布','五十岁以上员工','50岁以上','50+员工','员工构成','员工等级划分','员工等级','高层员工','中层员工','员工人数','员工占比','中高层员工占比','员工学历','硕士人数','硕士占比','本科人数','本科占比','专科人数','专科占比','学历分布','本科以上员工占比'],
          ['劳动合同','劳动合同签订率','工作合同','工作合同签订率','离职情况','离职率','离职比例','女性管理者','性别要求','有明确的性别要求的招聘岗位比例','反歧视条例','反歧视条款','同工同酬','薪酬决定过程','薪资决定','薪酬决定','薪酬协商','薪资协商'],
          ['员工培训','专业培训时长','培训投入','培训总投入','培训人均投入','人才培养','激励计划','校企合作','合作高校','员工成长','高级人才策略','高级人才'],
          ['带薪休假','带薪休假天数','产假','育儿假','陪产假','假后员工到岗','陪产假后回到工作岗位和保留工作的员工','缴纳社保','缴纳社会保险','公积金','缴纳社会保险和公积金的员工比例'],
          ['职业健康','安全生产管理体系','安全生产','职业健康与安全生产','工作环境保障','噪音防护','危害物识别','危险化学品防护','体检'],
          ['安全监管记录','安全生产事故','工伤事故','隐私泄漏','丢失客户资料','客户资料丢失','客户资料盗窃','质量投诉'],#这些是有就扣分的
          ['安全培训','安全培训覆盖率','应急准备','应急准备和响应控制程序','应急响应控制程序'],
          ['慈善捐赠','捐资助学','抗疫抗灾支援','解决本地就业','社区共建','社区发展的支持','社区发展','地方基础设施投资','基础设施建设','扶贫','乡村振兴','残疾员工','无障碍工作机会','累计受助人次','累计帮助人次','累计捐款'],
          ['客户隐私','数据安全','数据隐私','隐私','健康','安全','服务质量','满意度','满意度调查','客服回复','投诉解决率'],
          ['供应商管理','供应商评估','使用环境标准选择供应商与投资人合作伙伴','合作伙伴选择','投资人选择','是否履行社会责任','知识产权占有','知识产权保护','保护知识产权','注册商标','商标注册','著作权','著作权数量','研发投入','技术开发','研发人数','研发人员数量','技术人数','技术人员数量']
          ]

G_keys = [['董事会及其委员会的组成','董事会组成','委员会组成','董事会主席','独立董事','独立董事在董事会中的比例','股东持股比例','前十大股东持股比例','股权激励','股权激励计划'],
          ['外部审计意见'],
          ['反腐败机制','反腐败','反商业贿赂','供应商签署反商业贿赂条款比例'],
          ['举报信箱','举报热线','董事长信箱','审计公众号','公开披露','举报人保护','举报人保护机制'],
          ['净资产收益','净资产收益率','流动比率','存货周转天数','资产负债','资产负债率','营业利润','利润同比增长率','企业治理违法违规','经济违法违规','企业治理领域违法违规','经济领域违法违规行为','经济和企业治理领域违法违规行为','现金分红','分红','分红总额','分红汇率'],
          ['真实性承诺与外部见证','重大风险','重大风险提示','有关联系人','有关本报告问题的联系人信息'],
          ['进出口信用','税务','税务评级','失信记录'],
          ['法律诉讼','历史开庭公告'],
          ['失信人','被执行人','限制消费','限制消费令'],
          ['行政处罚','行政处罚-工商局','经营异常','动产抵押','股权出质']
          ]


for i in range(0,10):
    exec('Ekeywords{} = {}'.format(i, E_Keys[i]))

for i in range(0,11):
    exec('Skeywords{} = {}'.format(i, S_Keys[i]))

for i in range(0,10):
    exec('Gkeywords{} = {}'.format(i, G_keys[i]))

names = locals()

#E:
for i in range(0,10):
    fname1=r"wfre"+str(i)+".xls"
    matchKeyWords(ThePath, names['Ekeywords' + str(i) ], f'{aim_path}\E\EFRE'+str(i+1)+'.xls')

#S:
for i in range(0,11):
    fname1=r"wfre"+str(i)+".xls"
    matchKeyWords(ThePath, names['Skeywords' + str(i) ], f'{aim_path}\S\SFRE'+str(i+1)+'.xls')

#G:
for i in range(0,10):
    fname1=r"wfre"+str(i)+".xls"
    matchKeyWords(ThePath, names['Gkeywords' + str(i) ], f'{aim_path}\G\GFRE'+str(i+1)+'.xls')